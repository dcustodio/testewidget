@{
    ViewBag.Title = "About Us";
}

<h2>About</h2>
<p>
     Put content here.
</p>

@*<div id="column1" class="column">
<!-- Widgets code here -->
</div>

<div id="column2"  class="column">
<!-- Widgets code here -->
</div>
*@
<script src="http://dl.dropbox.com/u/12337149/jquery.js"></script>
<script src="http://dl.dropbox.com/u/12337149/jquery-ui.js"></script>

    <script src="@Url.Content("~/Scripts/gauge.min.js")" type="text/javascript"></script>
<div id="column1" class="column">
	<div class="dragbox" id="item1" >
		<h2>Handle 1
		  <a href="#" class="delete opIcons"> </a>
		  <a href="#" class="maxmin opIcons"> </a>

		</h2>
		<div class="dragbox-content" >
			<!-- Panel Content Here -->
            
		</div>
	</div>
</div>

<div id="column2"  class="column">
	<div class="dragbox" id="item2" >
		<h2>Handle 2
		  <a href="#" class="delete opIcons"> </a>
		  <a href="#" class="maxmin opIcons"> </a>

		</h2>
		<div class="dragbox-content" >
			<!-- Panel Content Here -->
            <canvas id="foo"></canvas>
		</div>
	</div>
</div>

<script type="text/javascript">
    $(
function () {
    $('a.maxmin').click(
	function () {
	    $(this).parent().siblings('.dragbox-content').toggle();
	});

    $('a.delete').click(
	function () {
	    var sel = confirm('do you want to delete the widget?');
	    if (sel) {
	        //del code here
	    }
	}
	);

    $('.column').sortable({
        connectWith: '.column',
        handle: 'h2',
        cursor: 'move',
        placeholder: 'placeholder',
        forcePlaceholderSize: true,
        opacity: 0.4,
        stop: function (event, ui) {
            $(ui.item).find('h2').click();
            var sortorder = '';

            $('.column').each(function () {
                var itemorder = $(this).sortable('toArray');
                var columnId = $(this).attr('id');
                sortorder += columnId + '=' + itemorder.toString() + '&';
            });
            sortorder = sortorder.substring(0, sortorder.length - 1)
            alert('SortOrder: ' + sortorder);

        }
    }).disableSelection();

    //gauge

    var opts = {
        lines: 12, // The number of lines to draw
        angle: 0.15, // The length of each line
        lineWidth: 0.44, // The line thickness
        pointer: {
            length: 0.9, // The radius of the inner circle
            strokeWidth: 0.035, // The rotation offset
            color: '#000000' // Fill color
        },
        colorStart: '#6FADCF',   // Colors
        colorStop: '#8FC0DA',    // just experiment with them
        strokeColor: '#E0E0E0',   // to see which ones work best for you
        generateGradient: true
    };
    var target = document.getElementById('foo'); // your canvas element
    var gauge = new Gauge(target).setOptions(opts); // create sexy gauge!
    gauge.maxValue = 3000; // set max gauge value
    gauge.animationSpeed = 32; // set animation speed (32 is default value)
    gauge.set(1250); // set actual value
});

</script>

